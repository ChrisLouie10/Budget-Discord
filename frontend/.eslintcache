[{"C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\index.js":"1","C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\App.js":"2","C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\components\\navbar.jsx":"4","C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\components\\chatDisplay.jsx":"5","C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\components\\chatBox.jsx":"6"},{"size":521,"mtime":1608404743564,"results":"7","hashOfConfig":"8"},{"size":1639,"mtime":1608607885099,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":318,"mtime":1608406162207,"results":"11","hashOfConfig":"8"},{"size":937,"mtime":1608608418242,"results":"12","hashOfConfig":"8"},{"size":959,"mtime":1608604017242,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"gav9yp",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\index.js",[],["29","30"],"C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\App.js",["31"],"import React, { Component } from 'react';\nimport Navbar from './components/navbar.jsx';\nimport ChatDisplay from './components/chatDisplay.jsx';\nimport axios from 'axios';\n\nclass App extends Component {\n  state = { \n    messages: [] \n  };\n\n  componentDidMount = () => {\n    axios.get(\"/getChatLogs\").then(response => {\n      console.log(response.data);\n      if (response.data){\n        let messages = [...this.state.messages];\n        for (let i = 0; i < response.data.length; i++){\n          messages.push(response.data[i]);\n        }\n        this.setState({ messages });\n      }\n    });\n  };\n\n  updateMessages = (input, timestamp) => {\n    ////First clone the messages array from the state\n    let messages = [...this.state.messages];\n    let message;\n\n    //If this is the first message then create the first map\n    //and push it into the messages array\n    if (messages.length === 0){\n      message = {input: input, id: 1, author: \"Stephen\", timestamp: timestamp};\n      messages.push(message);\n    }\n\n    //Otherwise use the last element of the messages array \n    //to create a new id\n    else{\n      message = {input: input, id: messages[messages.length-1].id + 1, author: \"Stephen\", timestamp: timestamp};\n      messages.push(message);\n    }\n\n    this.setState({ messages });\n    axios.post(\"http://localhost:3000/\", message)\n    .then(() => console.log(\"Testing...\")).\n    catch(err => {\n      console.error(err);\n    });\n  };\n\n  render() { \n    return (\n      <div>\n        <Navbar />\n        <ChatDisplay updateMessages={this.updateMessages} messages={this.state.messages}/>\n      </div>\n    );\n  };  \n};\n \nexport default App;\n","C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\components\\navbar.jsx",[],"C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\components\\chatDisplay.jsx",[],"C:\\Users\\Kelvin\\Desktop\\My projects\\Budget-Discord\\frontend\\src\\components\\chatBox.jsx",["32"],"import React, { Component } from 'react';\r\n\r\nclass ChatBox extends Component {\r\n    state = { \r\n        input: \"\"\r\n     };\r\n\r\n    //When Enter key is pressed on the input,\r\n    //the value of the input is sent to ChatDisplay\r\n    //and the input is cleared\r\n    handleEnterPress = (e) => {\r\n        if (e.key == \"Enter\"){\r\n            //Send the new message to chatDisplay.jsx\r\n            const timestamp = new Date();\r\n            console.log(timestamp.toString());\r\n            this.props.updateMessages(e.target.value, timestamp.toString());\r\n            this.setState({input: \"\"});  \r\n        }\r\n    };\r\n\r\n    handleInputChange = (e) => {\r\n        this.setState({input: e.target.value});\r\n    };\r\n\r\n    render() { \r\n        return (  \r\n            <input type=\"text\" className=\"form-control m-2\" id=\"chatBox\" value={this.state.input} onChange={this.handleInputChange} onKeyPress={this.handleEnterPress}/>\r\n        );\r\n    }\r\n}\r\n \r\nexport default ChatBox;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":45,"column":43,"nodeType":"39","messageId":"40","endLine":45,"endColumn":44,"fix":"41"},{"ruleId":"42","severity":1,"message":"43","line":12,"column":19,"nodeType":"44","messageId":"45","endLine":12,"endColumn":21},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"48","text":"49"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",[1377,1383],"\n    ."]